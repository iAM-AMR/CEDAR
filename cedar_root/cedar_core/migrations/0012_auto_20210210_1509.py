# Generated by Django 3.1.5 on 2021-02-10 20:09

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('cedar_core', '0011_auto_20210204_1539'),
    ]

    operations = [
        migrations.RenameField(
            model_name='location_02',
            old_name='iso_country_code_2',
            new_name='iso_country_code_2_id',
        ),
        migrations.AlterField(
            model_name='ast_method',
            name='method',
            field=models.CharField(help_text='Laboratory test method used to determine antimicrobial susceptibility', max_length=50),
        ),
        migrations.AlterField(
            model_name='atc_vet',
            name='is_added',
            field=models.BooleanField(),
        ),
        migrations.AlterField(
            model_name='factor',
            name='amu_id',
            field=models.ManyToManyField(db_table='factor_amu_join', help_text='The antimicrobials(s) that were administered to one or more groups within the study population', related_name='factors_amu', to='cedar_core.atc_vet'),
        ),
        migrations.AlterField(
            model_name='factor',
            name='contable_a',
            field=models.PositiveIntegerField(blank=True, help_text='The number of observations of resistance in the exposed group', null=True),
        ),
        migrations.AlterField(
            model_name='factor',
            name='contable_b',
            field=models.PositiveIntegerField(blank=True, help_text='The number of observations of susceptibility in the exposed group', null=True),
        ),
        migrations.AlterField(
            model_name='factor',
            name='contable_c',
            field=models.PositiveIntegerField(blank=True, help_text='The number of observations of resistance in the referent group', null=True),
        ),
        migrations.AlterField(
            model_name='factor',
            name='contable_d',
            field=models.PositiveIntegerField(blank=True, help_text='The number of observations of susceptibility in the referent group', null=True),
        ),
        migrations.AlterField(
            model_name='factor',
            name='factor_description',
            field=models.TextField(blank=True, help_text='A brief description of the factor, in sentence case. Additional information and experimental conditions related to the factor are included here. This includes details such as level of antimicrobial use (dosage), serovar, time period of administration, prior antimicrobial use, etc. The description field can be left blank where there is no detail to be added beyond the title.', null=True),
        ),
        migrations.AlterField(
            model_name='factor',
            name='factor_ref',
            field=models.ForeignKey(help_text='The reference that describes the factor', on_delete=django.db.models.deletion.CASCADE, to='cedar_core.reference', to_field='other_reference_id'),
        ),
        migrations.AlterField(
            model_name='factor',
            name='factor_title',
            field=models.CharField(blank=True, help_text='A title that describes the factor, in title case. The title should be simple and direct, with no experimental context. The goal is to be able to understand what the factor is, while leaving the name as generic as possible; comparable factors from different studies should be easily indentifiable as comparable. Common abbreviations are acceptable. Factors including antimicrobial use should be formatted as "AntiX Use" where AntiX is the antimicrobial(s) administered (e.g. Bambermycin Use, Ceftiofur Use). Factors comparing organic / no antimicrobial use / free-range / conventional production should be titled "Production Type", and a precise description provided in the description field', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='factor',
            name='group_exposed',
            field=models.CharField(blank=True, help_text='A brief description of the exposed group, in title case. The description should again, be simple and direct.  Comparison groups are allocated as described in the literature. If no allocation is provided, the less interventionist (or default practice) should be used as the referent. Factors including antimicrobial use are always given with the less interventionist as the referent (i.e. with "No Use" as the referent group or the lower dose as the referent, and "AntiX Use" for the exposed group,  where AntiX is the antimicrobial(s) administered). The dose should be provided in the main factor description, unless the factor is a comparison of two doses', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='factor',
            name='group_referent',
            field=models.CharField(blank=True, help_text='A brief description of the referent (unexposed) group, in title case. The description should again, be simple and direct. Comparison groups are allocated as described in the literature. If no allocation is provided, the less interventionist (or default practice) should be used as the referent. Factors including antimicrobial use are always given with the less interventionist as the referent (i.e. with "No Use" as the referent group or the lower dose as the referent, and "AntiX Use" for the exposed group,  where AntiX is the antimicrobial(s) administered). The dose should be provided in the main factor description, unless the factor is a comparison of two doses', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='factor',
            name='odds_ratio',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The odds ratio that describes the factor, up to 2 decimal places', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='factor',
            name='odds_ratio_lo',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The lower (usually 95%) confidence interval of the odds ratio that describes the factor, up to 2 decimal places', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='factor',
            name='odds_ratio_up',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The upper (usually 95%) confidence interval of the odds ratio that describes the factor, up to 2 decimal places', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='factor',
            name='place_in_text',
            field=models.CharField(blank=True, help_text='The location of the factor data in-text, i.e. "Table 2". If the data is from the body of the text, use the page and paragraph numbers (Pg. and Para. respectively)', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='factor',
            name='prevtable_a',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The proportion of observations of resistance in the exposed group, up to 2 decimal places', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='factor',
            name='prevtable_b',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The proportion of observations of susceptibility in the exposed group, up to 2 decimal places', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='factor',
            name='prevtable_c',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The proportion of observations of resistance in the referent group, up to 2 decimal places', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='factor',
            name='prevtable_d',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The proportion of observations of susceptibility in the referent group, up to 2 decimal places', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='factor',
            name='resistance',
            field=models.ForeignKey(blank=True, help_text='The resistance that was assayed', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='factors_resistance', to='cedar_core.atc_vet'),
        ),
        migrations.AlterField(
            model_name='factor',
            name='table_n_exp',
            field=models.PositiveIntegerField(blank=True, help_text='The total number of observations in the exposed group', null=True),
        ),
        migrations.AlterField(
            model_name='factor',
            name='table_n_ref',
            field=models.PositiveIntegerField(blank=True, help_text='The total number of observations in the referent group', null=True),
        ),
        migrations.AlterField(
            model_name='factor',
            name='v12_is_v1_import',
            field=models.BooleanField(blank=True, help_text='The factor is imported from v1.', null=True),
        ),
        migrations.AlterField(
            model_name='factor',
            name='v12_was_replaced',
            field=models.BooleanField(blank=True, help_text='The factor was replaced (sole source).', null=True),
        ),
        migrations.AlterField(
            model_name='factor_exclusion',
            name='exclude_reason',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='factor_exclusion',
            name='factor',
            field=models.ForeignKey(blank=True, help_text='The factor that is to be excluded', null=True, on_delete=django.db.models.deletion.SET_NULL, to='cedar_core.factor'),
        ),
        migrations.AlterField(
            model_name='factor_exclusion',
            name='model',
            field=models.ForeignKey(blank=True, help_text='The model from which the factor should be excluded', null=True, on_delete=django.db.models.deletion.SET_NULL, to='cedar_core.model'),
        ),
        migrations.AlterField(
            model_name='host_01',
            name='host_name',
            field=models.CharField(help_text='The host from which the assayed microbe originated, i.e. "Chicken"', max_length=20, unique=True),
        ),
        migrations.AlterField(
            model_name='host_02',
            name='host_subtype_name',
            field=models.CharField(help_text='The host subtype from which the assayed microbe originated, i.e. "Eggs" for a parent host "Chicken"', max_length=100),
        ),
        migrations.AlterField(
            model_name='legacy_user',
            name='name_user',
            field=models.CharField(help_text='The user\'s full name, i.e. "John Smith"', max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='location_01',
            name='bin_developing',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='location_01',
            name='bin_land_lock_least_developed_countries',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='location_01',
            name='bin_least_developed_countries',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='location_01',
            name='bin_small_island_developing_states',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='location_01',
            name='code_global',
            field=models.IntegerField(blank=True, help_text='Global code', null=True),
        ),
        migrations.AlterField(
            model_name='location_01',
            name='m49_code',
            field=models.IntegerField(blank=True, help_text='M49 code', null=True),
        ),
        migrations.AlterField(
            model_name='location_01',
            name='name_global',
            field=models.TextField(blank=True, help_text='Global name', null=True),
        ),
        migrations.AlterField(
            model_name='location_02',
            name='cipars_region_atlantic',
            field=models.BooleanField(help_text='The location is within the CIPARS atlantic region'),
        ),
        migrations.AlterField(
            model_name='location_02',
            name='cipars_region_maritimes',
            field=models.BooleanField(help_text='The location is within the CIPARS maritimes region'),
        ),
        migrations.AlterField(
            model_name='location_02',
            name='cipars_region_national',
            field=models.BooleanField(help_text='The location is within the CIPARS national region'),
        ),
        migrations.AlterField(
            model_name='location_02',
            name='cipars_region_prairies',
            field=models.BooleanField(help_text='The location is within the CIPARS prairies region'),
        ),
        migrations.AlterField(
            model_name='location_join',
            name='loc_ref',
            field=models.ForeignKey(blank=True, help_text='The reference pertaining to this location', null=True, on_delete=django.db.models.deletion.CASCADE, to='cedar_core.reference', to_field='other_reference_id'),
        ),
        migrations.AlterField(
            model_name='moa_type',
            name='res_format',
            field=models.CharField(help_text='The format of the extracted measure of association data', max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='moa_unit',
            name='res_unit',
            field=models.CharField(help_text='The unit of analysis of the extracted measure of association data', max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='model',
            name='model_create_user',
            field=models.ForeignKey(blank=True, help_text='The user who created the model/query', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_c', to='cedar_core.legacy_user'),
        ),
        migrations.AlterField(
            model_name='model',
            name='model_description',
            field=models.CharField(blank=True, help_text="A simple and brief description or 'caption' of the model", max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='model',
            name='model_maintain_user_id',
            field=models.ManyToManyField(db_table='model_user_join', help_text='The user who maintains the model/query', to='cedar_core.legacy_user'),
        ),
        migrations.AlterField(
            model_name='production_stage',
            name='stage',
            field=models.CharField(help_text='The production stage to which the factor applies, or where the effect of a factor is observed, i.e. "Farm"', max_length=20, unique=True),
        ),
        migrations.AlterField(
            model_name='publisher',
            name='pub_rank',
            field=models.IntegerField(blank=True, help_text='The Scimago rank at the time of import (2018)', null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='CEDAR_extract_esr',
            field=models.BooleanField(blank=True, help_text='Specifies whether this reference is to be extracted by the ESR team (i.e. "Entercoccus Scoping Review")', null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='RWID',
            field=models.PositiveIntegerField(blank=True, help_text='The corresponding RefWorks ID for the study', null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='capture_search_2016',
            field=models.BooleanField(blank=True, help_text='The reference was captured in the 2016 literature search', null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='capture_search_2019',
            field=models.BooleanField(blank=True, help_text='The reference was captured in the 2019 literature search', null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='capture_snowball',
            field=models.BooleanField(blank=True, help_text='The reference was captured through snowballing (searching cited papers, and or reverse citations)', null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='capture_submit',
            field=models.BooleanField(blank=True, help_text='The reference was captured through a direct submission to CEDAR', null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='exclude_extraction',
            field=models.BooleanField(default=False, help_text='Specifies whether or not to exclude the reference from extraction'),
        ),
        migrations.AlterField(
            model_name='reference',
            name='exclude_extraction_reason',
            field=models.CharField(blank=True, help_text='If the reference is to be excluded, the reason for doing so', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='has_breakpoint',
            field=models.CharField(blank=True, choices=[('1', 'Yes'), ('0', 'No'), ('2', 'Unclear'), ('3', 'Not Reported'), ('4', 'Needs Review')], help_text='Specifies whether the study explicitly reports the MIC values used in its susceptibility tests', max_length=2, null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='has_mic_table',
            field=models.CharField(blank=True, choices=[('1', 'Yes'), ('0', 'No'), ('2', 'Unclear'), ('3', 'Not Reported'), ('4', 'Needs Review')], help_text='Specifies whether the study includes an MIC table', max_length=2, null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='name_author',
            field=models.TextField(blank=True, help_text='The name(s) or surname(s) of the authors, in the form of a comma-separated or semi-colon-separated list, i.e. "Chapman, Smith, Otten, Fazil" or "Howe, K.; Linton, A. H.; Osborne, A. D."', null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='name_bibtex',
            field=models.CharField(default='', help_text='An abbreviated identifier for the study in the format of an in-text citation, given by Bibtex, i.e. "Jones2013". A lowercase letter is appended to the date where multiple items may be confused.', max_length=200),
        ),
        migrations.AlterField(
            model_name='reference',
            name='other_reference_id',
            field=models.PositiveIntegerField(blank=True, help_text='An additional identifier for the study, from the legacy database', null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='ref_abstract',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='study_design',
            field=models.ForeignKey(blank=True, help_text='The type of study design used in the study', null=True, on_delete=django.db.models.deletion.SET_NULL, to='cedar_core.study_design'),
        ),
        migrations.AlterField(
            model_name='reference',
            name='study_objective',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='study_sample_method',
            field=models.TextField(blank=True, help_text='A description of the sampling method (i.e. how samples were selected and collected) used in the study', null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='topic_tab_campylobacter',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='topic_tab_cattle',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='topic_tab_chicken',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='topic_tab_ecoli',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='topic_tab_enterococcus',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='topic_tab_has_topic',
            field=models.BooleanField(blank=True, help_text='Specifies whether the reference mentions at least one specific host or microbe', null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='topic_tab_host_free',
            field=models.CharField(blank=True, help_text='Free text description of the animal host(s) the reference pertains to', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='topic_tab_microbe_free',
            field=models.CharField(blank=True, help_text='Free text description of the microbe(s) the reference pertains to', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='topic_tab_salmonella',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='topic_tab_swine',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='topic_tab_turkey',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='v12_is_in_v1_and_v2',
            field=models.BooleanField(blank=True, help_text='This reference exists in both v1 and v2.', null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='v12_is_v1_import',
            field=models.BooleanField(blank=True, help_text='The factor is imported from v1.', null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='v12_migrated_from',
            field=models.PositiveIntegerField(blank=True, help_text='For v2 references, this is the  v1 reference which matched during factor migration from v1 to v2. Factors were migrated from this record.', null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='v12_solo_extraction_2016',
            field=models.BooleanField(blank=True, help_text='For v2 references, these were identified as previously extracted in v1 by the assigned extractor, and were NOT dual-extracted.', null=True),
        ),
        migrations.AlterField(
            model_name='reference_note',
            name='note_ref',
            field=models.ForeignKey(blank=True, help_text='The reference pertaining to this note', null=True, on_delete=django.db.models.deletion.CASCADE, to='cedar_core.reference', to_field='other_reference_id'),
        ),
        migrations.AlterField(
            model_name='reference_note',
            name='user',
            field=models.ForeignKey(blank=True, help_text='The user who made the note', null=True, on_delete=django.db.models.deletion.SET_NULL, to='cedar_core.legacy_user'),
        ),
        migrations.AlterField(
            model_name='study_design',
            name='design',
            field=models.CharField(help_text='The overall study design of the study', max_length=50, unique=True),
        ),
    ]
